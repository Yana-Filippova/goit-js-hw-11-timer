{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","intervalId","timerId","document","querySelector","days","hours","mins","secs","start","setInterval","deltaTime","Date","now","time","getTimeRemaining","updateClock","clearInterval","pad","Math","floor","value","String","padStart","textContent","timer1","timer2"],"mappings":";;;AA6DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7DA,QAAA,gBAEMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,WAAa,KAEbC,KAAAA,QAAUC,SAASC,cAAiB,GAAA,OAAA,KAAKL,WACzCM,KAAAA,KAAO,KAAKH,QAAQE,cAAc,uBAClCE,KAAAA,MAAQ,KAAKJ,QAAQE,cAAc,wBACnCG,KAAAA,KAAO,KAAKL,QAAQE,cAAc,uBAClCI,KAAAA,KAAO,KAAKN,QAAQE,cAAc,uBAElCK,KAAAA,QA+CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA5CE,MAAA,WAAQ,IAAA,EAAA,KACDR,KAAAA,WAAaS,YAAY,WACtBC,IAAAA,EAAY,EAAKX,WAAaY,KAAKC,MACnCC,EAAO,EAAKC,iBAAiBJ,GAI/BA,GAFJ,EAAKK,YAAYF,GAEbH,GAAa,EAAG,CAClBM,cAAc,EAAKhB,YACba,IAAAA,EAAO,EAAKC,iBAAiB,GAEnC,EAAKC,YAAYF,KAElB,OA+BP,CAAA,IAAA,mBA5BE,MAAA,SAAiBA,GAMR,MAAA,CAAET,KALI,KAAKa,IAAIC,KAAKC,MAAMN,EAAQ,QAK1BR,MAJD,KAAKY,IAAIC,KAAKC,MAAON,EAAQ,MAAyB,OAI9CP,KAHT,KAAKW,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAGlCN,KAFf,KAAKU,IAAIC,KAAKC,MAAON,EAAQ,IAAc,SAwB5D,CAAA,IAAA,MAnBE,MAAA,SAAIO,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAkBrC,CAAA,IAAA,cAfE,MAAA,SAAyC,GAA3BlB,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1BH,KAAAA,KAAKmB,YAAcnB,EACnBC,KAAAA,MAAMkB,YAAclB,EACpBC,KAAAA,KAAKiB,YAAcjB,EACnBC,KAAAA,KAAKgB,YAAchB,MAW5B,EA3DMV,GAsDA2B,EAAS,IAAI3B,EAAe,CAChCC,SAAU,WACVC,WAAY,IAAIY,KAAK,kBAGjBc,EAAS,IAAI5B,EAAe,CAChCC,SAAU,WACVC,WAAY,IAAIY,KAAK","file":"src.67450aa5.js","sourceRoot":"../src","sourcesContent":["import './styles.css';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.intervalId = null;\n\n    this.timerId = document.querySelector(`${this.selector}`);\n    this.days = this.timerId.querySelector('[data-value=\"days\"]');\n    this.hours = this.timerId.querySelector('[data-value=\"hours\"]');\n    this.mins = this.timerId.querySelector('[data-value=\"mins\"]');\n    this.secs = this.timerId.querySelector('[data-value=\"secs\"]');\n\n    this.start();\n  }\n\n  start() {\n    this.intervalId = setInterval(() => {\n      const deltaTime = this.targetDate - Date.now();\n      const time = this.getTimeRemaining(deltaTime);\n\n      this.updateClock(time);\n\n      if (deltaTime <= 0) {\n        clearInterval(this.intervalId);\n        const time = this.getTimeRemaining(0);\n\n        this.updateClock(time);\n      }\n    }, 1000);\n  }\n\n  getTimeRemaining(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  updateClock({ days, hours, mins, secs }) {\n    this.days.textContent = days;\n    this.hours.textContent = hours;\n    this.mins.textContent = mins;\n    this.secs.textContent = secs;\n  }\n}\n\n// Плагин это класс CountdownTimer, экземпляр которого создает новый таймер с настройками.\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 05, 2021'),\n});\n\nconst timer2 = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate: new Date('Dec 31, 2021'),\n});\n"]}